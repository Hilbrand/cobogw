<?xml version="1.0" encoding="utf-8" ?>
<!--                                                                         -->
<!-- Copyright 2007 Hilbrand Bouwkamp, hs@bouwkamp.com                       -->
<!--                                                                         -->
<!-- Licensed under the Apache License, Version 2.0 (the "License"); you may -->
<!-- not use this file except in compliance with the License. You may obtain -->
<!-- a copy of the License at                                                -->
<!--                                                                         -->
<!-- http://www.apache.org/licenses/LICENSE-2.0                              -->
<!--                                                                         -->
<!-- Unless required by applicable law or agreed to in writing, software     -->
<!-- distributed under the License is distributed on an "AS IS" BASIS,       -->
<!-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.-->
<!-- See the License for the specific language governing permissions and     -->
<!-- limitations under the License.                                          -->
<!--                                                                         -->
<project name="javasql" default="all" basedir=".">
  <description>
    Build file to compile, test and package the classes that emulate the
    java.sql.Date, java.sql.Time and java.sql.Timestamp in Javascript to be able
    to use those classes in client-server communication.

    To run set the environment variable GWT_HOME to the home directory of your
    GWT libraries, e.g. gwt-user.jar and JUNIT_JAR to the junit.jar file.
  </description>
  <property name="version" value="1.1.1" />
  <property name="packagefile" value="cobogw.java.sql" />
  <property name="jarfile" value="${packagefile}-${version}.jar" />
  <property name="zipprefix" value="${packagefile}-${version}" />
  <property name="zipfile" value="${packagefile}-${version}.zip" />
  <property name="src" location="src" />
  <property name="super" location="super" />
  <property name="build.tests" location="test" />
  <property name="build.dir" location="bin/${packagefile}" />
  <property name="www.dir" location="www/${packagefile}" />
  <property name="reports.tests" location="reports/${packagefile}" />
  <property name="junit3.jar" location="${JUNIT_JAR}" />
  <property name="gwt.path" location="${GWT_HOME}" />

  <!-- set classpath -->
  <path id="project.class.path">
    <pathelement location="${src}" />
    <pathelement location="${super}" />
    <pathelement location="${build.tests}" />
    <pathelement location="${build.dir}" />
    <pathelement path="${gwt.path}/gwt-user.jar" />
    <pathelement path="${gwt.path}/gwt-dev-windows.jar" />
    <pathelement path="${junit3.jar}" />
  </path>

  <target name="clean.build" description="Clean the compiled classes">
    <mkdir dir="${build.dir}" />
    <delete failonerror="false">
      <fileset dir="${build.dir}" includes="**/*.class" />
    </delete>
  </target>

  <target name="clean.all" depends="clean.build"
  	  description="Clean all genererated files">
    <delete failonerror="false" file="${jarfile}" />
    <delete failonerror="false" file="${zipfile}" />
    <delete failonerror="false">
      <fileset dir="www" includes="**"/>
      <fileset dir="tomcat" includes="**"/>
    </delete>
  </target>

  <target name="compile.debug" depends="clean.build"
  	  description="Compile src to bin in debug mode">
    <mkdir dir="${build.dir}" />
    <javac srcdir="src:test" destdir="${build.dir}" includes="**/*.java"
    	  debug="on" debuglevel="lines,vars,source" source="1.4" target="1.4">
      <classpath refid="project.class.path" />
    </javac>
  </target>

  <target name="unittest.hosted" depends="compile.debug"
  	  description="Run all JUnit tests in hosted mode">
    <mkdir dir="${reports.tests}/hostedmode" />
    <delete>
      <fileset dir="${reports.tests}/hostedmode" includes="**/.txt" />
    </delete>
    <junit fork="yes">
      <classpath>
        <pathelement location="${src}" />
        <pathelement location="${super}" />
        <pathelement location="${build.tests}" />
        <pathelement location="${build.dir}" />
        <pathelement path="${gwt.path}/gwt-user.jar" />
        <pathelement path="${gwt.path}/gwt-dev-windows.jar" />
        <pathelement path="${junit3.jar}" />
      </classpath>
      <jvmarg value="-Dgwt.args=-out ${www.dir}/hostedmode" />
      <formatter type="plain" />

      <batchtest fork="yes" todir="${reports.tests}/hostedmode">
        <fileset dir="${build.tests}">
          <include name="com/google/**/*Test*.java" />
        </fileset>
      </batchtest>
    </junit>
  </target>

  <target name="unittest.web" depends="compile.debug"
  	  description="Run all JUnit tests in web mode">
    <mkdir dir="${reports.tests}/webmode" />
    <delete>
      <fileset dir="${reports.tests}/webmode" includes="**/.txt" />
    </delete>
    <junit fork="yes">
      <classpath>
        <pathelement location="${src}" />
        <pathelement location="${super}" />
        <pathelement location="${build.tests}" />
        <pathelement location="${build.dir}" />
        <pathelement path="${gwt.path}/gwt-user.jar" />
        <pathelement path="${gwt.path}/gwt-dev-windows.jar" />
        <pathelement path="${junit3.jar}" />
      </classpath>
      <jvmarg value="-Dgwt.args=-web -out ${www.dir}/webmode -style pretty" />
      <formatter type="plain" />
      <batchtest fork="yes" todir="${reports.tests}/webmode">
        <fileset dir="${build.tests}">
          <include name="com/google/**/*Test*.java" />
        </fileset>
      </batchtest>
    </junit>
  </target>

  <target name="package"
	    depends="unittest.hosted, unittest.web, clean.build, compile.debug"
  	  description="Package up the project as a jar">
    <jar destfile="${jarfile}">
      <fileset dir="${build.dir}">
        <include name="com/google/gwt/user/client/rpc/core/java/sql/*.class" />
      </fileset>
      <fileset dir="src">
        <include name="com/google/gwt/user/client/rpc/core/java/sql/*.java" />
      </fileset>
      <fileset dir="super">
        <include name="**/*.java" />
      </fileset>
    </jar>
  </target>

  <target name="zip" depends="clean.all, package"
  	  description="Put jar and readme.txt in zip file">
    <zip destfile="${zipfile}">
      <zipfileset file="COPYING" prefix="${zipprefix}" />
      <zipfileset file="${jarfile}" prefix="${zipprefix}" />
    </zip>
  </target>

  <target name="all" depends="zip" />
</project>